version: '3'
services:
  apache:
    build: .docker/apache
    container_name: sf4_apache
    ports:
      - 80:80
    volumes:
      - .docker/config/vhosts:/etc/apache2/sites-enabled
      - web-site-volume:/home/wwwroot/sf4
    depends_on:
      - php

  mysql:
    image: mysql
    container_name: sf4_mysql
    volumes:
      - mysql-volume:/var/lib/mysql
      # the following file will be executed automatically by mysql entrypoint
      - .docker/mysql/updateMyIniFile.sh:/docker-entrypoint-initdb.d/01-updateMyIniFile.sh
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sf4
      MYSQL_USER: sf4
      MYSQL_PASSWORD: sf4

  php:
    build: .docker/php
    container_name: sf4_php
    volumes:
      - ./src:/home/wwwroot/sf4
      - ./.docker/php/php.ini:/etc/php/7.2.3/php.ini
      - ./.docker/php/php-fpm-pool.conf:/etc/php/7.2.3/pool.d/www.conf
      - ./.docker/php/install.sh:/usr/local/bin/install.sh
      - ./.docker/php/entrypoint.sh:/usr/local/bin/custom-entrypoint
    environment:
      maildev_host: sf4_maildev
      # pass .env variables to the container
      HOST_USER_ID: ${HOST_USER_ID}
      HOST_GROUP_ID: ${HOST_GROUP_ID}

    depends_on:
      - mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: sf4_phpmyadmin
    # add some environment variable to the container
    # in order to be able to connect to mysql server
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_PORT=3306
    links:
      - mysql:db
    ports:
      - 8080:80
    depends_on:
      - mysql

volumes:
  mysql-volume: